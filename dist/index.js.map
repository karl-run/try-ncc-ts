{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///node_modules/node-fetch/lib/index.js","webpack:///index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_interopDefault","ex","Stream","http","Url","https","zlib","BUFFER","TYPE","Blob","[object Object]","this","blobParts","arguments","options","buffers","a","length","Number","element","buffer","Buffer","ArrayBuffer","isView","from","byteOffset","byteLength","String","push","concat","type","undefined","toLowerCase","test","size","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","slice","blob","FetchError","message","systemError","Error","code","errno","captureStackTrace","constructor","convert","defineProperties","writable","configurable","e","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBuffer","toString","disturbed","error","on","err","url","consumeBody","_this4","Promise","reject","TypeError","resolve","alloc","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","obj","append","delete","getAll","has","set","sort","clone","instance","p1","p2","bodyUsed","getBoundary","pipe","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","buf","ct","headers","assign","_this2","JSON","parse","_this3","convertBody","res","str","charset","exec","pop","arrayBuffer","json","text","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","map","MAP","Headers","init","rawHeaders","raw","headerNames","keys","headerName","method","iterator","pairs","pair","Array","join","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","kind","k","entries","forEach","values","INTERNAL","target","HeadersIteratorPrototype","index","setPrototypeOf","getPrototypeOf","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","opts","status","statusText","ok","INTERNALS$2","parse_url","format_url","format","streamDestructionSupported","Readable","isRequest","input","Request","parsedURL","href","toUpperCase","inputBody","contentType","extractContentType","signal","isAbortSignal","redirect","follow","compress","counter","agent","AbortError","PassThrough$1","resolve_url","fetch","request","getNodeRequestOptions","protocol","hostname","contentLengthValue","totalBytes","send","response","destroy","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","socket","createHeadersLenient","isArray","val","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","writeToStream","dest","write","default","__webpack_exports__","node_fetch__WEBPACK_IMPORTED_MODULE_0__","node_fetch__WEBPACK_IMPORTED_MODULE_0___default","console","log","gnelf","gnoblin","gnome","process","argv"],"mappings":"2BACA,IAAAA,EAAA,GAGA,SAAAC,oBAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,qBAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,oBAAAQ,EAAAF,EAGAN,oBAAAS,EAAAV,EAGAC,oBAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,oBAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAAAK,YAAA,EAAAC,IAAAL,KAKAZ,oBAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,QAAAA,OAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAAC,MAAA,WAEAP,OAAAC,eAAAb,EAAA,aAAA,CAAAmB,OAAA,KAQArB,oBAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,oBAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,GAAA,EAAAE,GAAA,iBAAAF,GAAAA,GAAAA,EAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,oBAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,UAAA,CAAAT,YAAA,EAAAK,MAAAA,IACA,EAAAE,GAAA,iBAAAF,EAAA,IAAA,IAAAM,KAAAN,EAAArB,oBAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAA,OAAAN,EAAAM,IAAAC,KAAA,KAAAD,IACA,OAAAF,GAIAzB,oBAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,GAAAA,EAAAqB,WACA,SAAAM,aAAA,OAAA3B,EAAA,SACA,SAAA4B,mBAAA,OAAA5B,GAEA,OADAH,oBAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,oBAAAa,EAAA,SAAAmB,EAAAC,GAAA,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,EAAAC,IAGAjC,oBAAAoC,EAAA,GAIApC,oBAAAA,oBAAAqC,EAAA,kCC9EA,SAAAC,gBAAAC,GAAA,OAAAA,GAAA,iBAAAA,GAAA,YAAAA,EAAAA,EAAA,QAAAA,EAFAzB,OAAAC,eAAAb,EAAA,aAAA,CAAAmB,OAAA,IAIA,IAAAmB,EAAAF,gBAAAtC,EAAA,IACAyC,EAAAH,gBAAAtC,EAAA,IACA0C,EAAAJ,gBAAAtC,EAAA,IACA2C,EAAAL,gBAAAtC,EAAA,IACA4C,EAAAN,gBAAAtC,EAAA,IAKA,MAAA6C,EAAA1B,OAAA,UACA2B,EAAA3B,OAAA,QAEA,MAAA4B,KACAC,cACAC,KAAAH,GAAA,GAEA,MAAAI,EAAAC,UAAA,GACAC,EAAAD,UAAA,GAEAE,EAAA,GAEA,GAAAH,EAAA,CACA,MAAAI,EAAAJ,EACAK,EAAAC,OAAAF,EAAAC,QACA,IAAA,IAAAnD,EAAA,EAAAA,EAAAmD,EAAAnD,IAAA,CACA,MAAAqD,EAAAH,EAAAlD,GACA,IAAAsD,EAEAA,EADAD,aAAAE,OACAF,EACAG,YAAAC,OAAAJ,GACAE,OAAAG,KAAAL,EAAAC,OAAAD,EAAAM,WAAAN,EAAAO,YACAP,aAAAG,YACAD,OAAAG,KAAAL,GACAA,aAAAV,KACAU,EAAAZ,GAEAc,OAAAG,KAAA,iBAAAL,EAAAA,EAAAQ,OAAAR,IAEAJ,EAAAa,KAAAR,IAIAT,KAAAJ,GAAAc,OAAAQ,OAAAd,GAEA,IAAAe,EAAAhB,QAAAiB,IAAAjB,EAAAgB,MAAAH,OAAAb,EAAAgB,MAAAE,cACAF,IAAA,mBAAAG,KAAAH,KACAnB,KAAAH,GAAAsB,GAGAI,WACA,OAAAvB,KAAAJ,GAAAU,OAEAa,WACA,OAAAnB,KAAAH,GAEAE,QACA,MAAAwB,EAAAvB,KAAAuB,KAEAC,EAAAtB,UAAA,GACAuB,EAAAvB,UAAA,GACA,IAAAwB,EAAAC,EAEAD,OADAN,IAAAI,EACA,EACAA,EAAA,EACAI,KAAAC,IAAAN,EAAAC,EAAA,GAEAI,KAAAE,IAAAN,EAAAD,GAGAI,OADAP,IAAAK,EACAF,EACAE,EAAA,EACAG,KAAAC,IAAAN,EAAAE,EAAA,GAEAG,KAAAE,IAAAL,EAAAF,GAEA,MAAAQ,EAAAH,KAAAC,IAAAF,EAAAD,EAAA,GAGAM,EADAhC,KAAAJ,GACAqC,MAAAP,EAAAA,EAAAK,GACAG,EAAA,IAAApC,KAAA,GAAA,CAAAqB,KAAAjB,UAAA,KAEA,OADAgC,EAAAtC,GAAAoC,EACAE,GA+BA,SAAAC,WAAAC,EAAAjB,EAAAkB,GACAC,MAAAhF,KAAA0C,KAAAoC,GAEApC,KAAAoC,QAAAA,EACApC,KAAAmB,KAAAA,EAGAkB,IACArC,KAAAuC,KAAAvC,KAAAwC,MAAAH,EAAAE,MAIAD,MAAAG,kBAAAzC,KAAAA,KAAA0C,aAOA,IAAAC,EA9CA9E,OAAA+E,iBAAA9C,KAAAb,UAAA,CACAsC,KAAA,CAAAxD,YAAA,GACAoD,KAAA,CAAApD,YAAA,GACAkE,MAAA,CAAAlE,YAAA,KAGAF,OAAAC,eAAAgC,KAAAb,UAAAf,OAAAC,YAAA,CACAC,MAAA,OACAyE,UAAA,EACA9E,YAAA,EACA+E,cAAA,IAgCAX,WAAAlD,UAAApB,OAAAY,OAAA6D,MAAArD,WACAkD,WAAAlD,UAAAyD,YAAAP,WACAA,WAAAlD,UAAAvB,KAAA,aAGA,IACAiF,EAAA5F,EAAA,GAAA4F,QACA,MAAAI,IAEA,MAAAC,EAAA9E,OAAA,kBAGA+E,EAAA1D,EAAA0D,YAWA,SAAAC,KAAAC,GACA,IAAAC,EAAApD,KAEAqD,EAAAnD,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,GAAA,GACAoD,EAAAD,EAAA9B,KAEA,IAAAA,OAAAH,IAAAkC,EAAA,EAAAA,EACA,IAAAC,EAAAF,EAAAG,QACA,IAAAA,OAAApC,IAAAmC,EAAA,EAAAA,EAEA,MAAAJ,EAEAA,EAAA,KACA,iBAAAA,GAAAM,kBAAAN,IAAAA,aAAArD,MAAAY,OAAAgD,SAAAP,IAAA,yBAAAtF,OAAAoB,UAAA0E,SAAArG,KAAA6F,IAAAxC,YAAAC,OAAAuC,IAAAA,aAAA5D,IAGA4D,EAAAnC,OAAAmC,IAEAnD,KAAAgD,GAAA,CACAG,KAAAA,EACAS,WAAA,EACAC,MAAA,MAEA7D,KAAAuB,KAAAA,EACAvB,KAAAwD,QAAAA,EAEAL,aAAA5D,GACA4D,EAAAW,GAAA,QAAA,SAAAC,GACA,MAAAF,EAAA,eAAAE,EAAArG,KAAAqG,EAAA,IAAA5B,0DAAAiB,EAAAY,QAAAD,EAAA3B,UAAA,SAAA2B,GACAX,EAAAJ,GAAAa,MAAAA,IA2HA,SAAAI,cACA,IAAAC,EAAAlE,KAEA,GAAAA,KAAAgD,GAAAY,UACA,OAAAV,KAAAiB,QAAAC,OAAA,IAAAC,oCAAArE,KAAAgE,QAKA,GAFAhE,KAAAgD,GAAAY,WAAA,EAEA5D,KAAAgD,GAAAa,MACA,OAAAX,KAAAiB,QAAAC,OAAApE,KAAAgD,GAAAa,OAIA,GAAA,OAAA7D,KAAAmD,KACA,OAAAD,KAAAiB,QAAAG,QAAA5D,OAAA6D,MAAA,IAIA,GAAA,iBAAAvE,KAAAmD,KACA,OAAAD,KAAAiB,QAAAG,QAAA5D,OAAAG,KAAAb,KAAAmD,OAIA,GAAAnD,KAAAmD,gBAAArD,KACA,OAAAoD,KAAAiB,QAAAG,QAAAtE,KAAAmD,KAAAvD,IAIA,GAAAc,OAAAgD,SAAA1D,KAAAmD,MACA,OAAAD,KAAAiB,QAAAG,QAAAtE,KAAAmD,MAIA,GAAA,yBAAAtF,OAAAoB,UAAA0E,SAAArG,KAAA0C,KAAAmD,MACA,OAAAD,KAAAiB,QAAAG,QAAA5D,OAAAG,KAAAb,KAAAmD,OAIA,GAAAxC,YAAAC,OAAAZ,KAAAmD,MACA,OAAAD,KAAAiB,QAAAG,QAAA5D,OAAAG,KAAAb,KAAAmD,KAAA1C,OAAAT,KAAAmD,KAAArC,WAAAd,KAAAmD,KAAApC,aAIA,KAAAf,KAAAmD,gBAAA5D,GACA,OAAA2D,KAAAiB,QAAAG,QAAA5D,OAAA6D,MAAA,IAKA,IAAAC,EAAA,GACAC,EAAA,EACAC,GAAA,EAEA,OAAA,IAAAxB,KAAAiB,QAAA,SAAAG,EAAAF,GACA,IAAAO,EAGAT,EAAAV,UACAmB,EAAAC,WAAA,WACAF,GAAA,EACAN,EAAA,IAAAjC,qDAAA+B,EAAAF,aAAAE,EAAAV,aAAA,kBACAU,EAAAV,UAIAU,EAAAf,KAAAW,GAAA,QAAA,SAAAC,GACA,eAAAA,EAAArG,MAEAgH,GAAA,EACAN,EAAAL,IAGAK,EAAA,IAAAjC,0DAAA+B,EAAAF,QAAAD,EAAA3B,UAAA,SAAA2B,MAIAG,EAAAf,KAAAW,GAAA,OAAA,SAAAe,GACA,IAAAH,GAAA,OAAAG,EAAA,CAIA,GAAAX,EAAA3C,MAAAkD,EAAAI,EAAAvE,OAAA4D,EAAA3C,KAGA,OAFAmD,GAAA,OACAN,EAAA,IAAAjC,8BAAA+B,EAAAF,mBAAAE,EAAA3C,OAAA,aAIAkD,GAAAI,EAAAvE,OACAkE,EAAAvD,KAAA4D,MAGAX,EAAAf,KAAAW,GAAA,MAAA,WACA,IAAAY,EAAA,CAIAI,aAAAH,GAEA,IACAL,EAAA5D,OAAAQ,OAAAsD,IACA,MAAAT,GAEAK,EAAA,IAAAjC,6DAAA+B,EAAAF,QAAAD,EAAA3B,UAAA,SAAA2B,UAwEA,SAAAN,kBAAAsB,GAEA,MAAA,iBAAAA,GAAA,mBAAAA,EAAAC,QAAA,mBAAAD,EAAAE,QAAA,mBAAAF,EAAA/G,KAAA,mBAAA+G,EAAAG,QAAA,mBAAAH,EAAAI,KAAA,mBAAAJ,EAAAK,MAKA,oBAAAL,EAAArC,YAAAhF,MAAA,6BAAAG,OAAAoB,UAAA0E,SAAArG,KAAAyH,IAAA,mBAAAA,EAAAM,MASA,SAAAC,MAAAC,GACA,IAAAC,EAAAC,EACAtC,EAAAoC,EAAApC,KAGA,GAAAoC,EAAAG,SACA,MAAA,IAAApD,MAAA,sCAgBA,OAXAa,aAAA5D,GAAA,mBAAA4D,EAAAwC,cAEAH,EAAA,IAAAvC,EACAwC,EAAA,IAAAxC,EACAE,EAAAyC,KAAAJ,GACArC,EAAAyC,KAAAH,GAEAF,EAAAvC,GAAAG,KAAAqC,EACArC,EAAAsC,GAGAtC,EA0DA,SAAA0C,cAAAN,GACA,MAAApC,EAAAoC,EAAApC,KAIA,OAAA,OAAAA,EAEA,EACA,iBAAAA,EAEAzC,OAAAK,WAAAoC,GACAM,kBAAAN,GAEAzC,OAAAK,WAAAC,OAAAmC,IACAA,aAAArD,KAEAqD,EAAA5B,KACAb,OAAAgD,SAAAP,GAEAA,EAAA7C,OACA,yBAAAzC,OAAAoB,UAAA0E,SAAArG,KAAA6F,GAEAA,EAAApC,WACAJ,YAAAC,OAAAuC,GAEAA,EAAApC,WACAoC,GAAA,mBAAAA,EAAA2C,gBAEA3C,EAAA4C,mBAAA,GAAA5C,EAAA4C,kBAAAzF,QACA6C,EAAA6C,gBAAA7C,EAAA6C,kBAEA7C,EAAA2C,gBAMA,KA1aA5C,KAAAjE,UAAA,CACAkE,WACA,OAAAnD,KAAAgD,GAAAG,MAGAuC,eACA,OAAA1F,KAAAgD,GAAAY,WAQA7D,cACA,OAAAkE,YAAA3G,KAAA0C,MAAAiG,KAAA,SAAAC,GACA,OAAAA,EAAAzF,OAAAwB,MAAAiE,EAAApF,WAAAoF,EAAApF,WAAAoF,EAAAnF,eASAhB,OACA,IAAAoG,EAAAnG,KAAAoG,SAAApG,KAAAoG,QAAApI,IAAA,iBAAA,GACA,OAAAiG,YAAA3G,KAAA0C,MAAAiG,KAAA,SAAAC,GACA,OAAArI,OAAAwI,OAEA,IAAAvG,KAAA,GAAA,CACAqB,KAAAgF,EAAA9E,gBACA,CACAtB,CAAAH,GAAAsG,OAUAnG,OACA,IAAAuG,EAAAtG,KAEA,OAAAiE,YAAA3G,KAAA0C,MAAAiG,KAAA,SAAAxF,GACA,IACA,OAAA8F,KAAAC,MAAA/F,EAAAkD,YACA,MAAAI,GACA,OAAAb,KAAAiB,QAAAC,OAAA,IAAAjC,4CAAAmE,EAAAtC,eAAAD,EAAA3B,UAAA,qBAUArC,OACA,OAAAkE,YAAA3G,KAAA0C,MAAAiG,KAAA,SAAAxF,GACA,OAAAA,EAAAkD,cASA5D,SACA,OAAAkE,YAAA3G,KAAA0C,OASAD,gBACA,IAAA0G,EAAAzG,KAEA,OAAAiE,YAAA3G,KAAA0C,MAAAiG,KAAA,SAAAxF,GACA,OAsJA,SAAAiG,YAAAjG,EAAA2F,GACA,GAAA,mBAAAzD,EACA,MAAA,IAAAL,MAAA,gFAGA,MAAA6D,EAAAC,EAAApI,IAAA,gBACA,IACA2I,EAAAC,EADAC,EAAA,QAIAV,IACAQ,EAAA,mBAAAG,KAAAX,IAIAS,EAAAnG,EAAAwB,MAAA,EAAA,MAAA0B,YAGAgD,GAAAC,IACAD,EAAA,iCAAAG,KAAAF,KAIAD,GAAAC,IACAD,EAAA,yEAAAG,KAAAF,MAGAD,EAAA,gBAAAG,KAAAH,EAAAI,SAKAJ,GAAAC,IACAD,EAAA,mCAAAG,KAAAF,IAIAD,IAKA,YAJAE,EAAAF,EAAAI,QAIA,QAAAF,IACAA,EAAA,YAKA,OAAAlE,EAAAlC,EAAA,QAAAoG,GAAAlD,WAtMA+C,CAAAjG,EAAAgG,EAAAL,aAOAvI,OAAA+E,iBAAAM,KAAAjE,UAAA,CACAkE,KAAA,CAAApF,YAAA,GACA2H,SAAA,CAAA3H,YAAA,GACAiJ,YAAA,CAAAjJ,YAAA,GACAmE,KAAA,CAAAnE,YAAA,GACAkJ,KAAA,CAAAlJ,YAAA,GACAmJ,KAAA,CAAAnJ,YAAA,KAGAmF,KAAAiE,MAAA,SAAAC,GACA,IAAA,MAAA1J,KAAAG,OAAAwJ,oBAAAnE,KAAAjE,WAEA,KAAAvB,KAAA0J,GAAA,CACA,MAAAE,EAAAzJ,OAAA0J,yBAAArE,KAAAjE,UAAAvB,GACAG,OAAAC,eAAAsJ,EAAA1J,EAAA4J,KAgXApE,KAAAiB,QAAAqD,OAAArD,QAQA,MAAAsD,EAAA,gCACAC,EAAA,0BAEA,SAAAC,aAAAjK,GAEA,GADAA,KAAAA,IACA+J,EAAAnG,KAAA5D,GACA,MAAA,IAAA2G,aAAA3G,qCAIA,SAAAkK,cAAAxJ,GAEA,GADAA,KAAAA,IACAsJ,EAAApG,KAAAlD,GACA,MAAA,IAAAiG,aAAAjG,sCAYA,SAAAyJ,KAAAC,EAAApK,GACAA,EAAAA,EAAA2D,cACA,IAAA,MAAA3C,KAAAoJ,EACA,GAAApJ,EAAA2C,gBAAA3D,EACA,OAAAgB,EAMA,MAAAqJ,EAAA7J,OAAA,OACA,MAAA8J,QAOAjI,cACA,IAAAkI,EAAA/H,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,QAAAkB,EAIA,GAFApB,KAAA+H,GAAAlK,OAAAY,OAAA,MAEAwJ,aAAAD,QAAA,CACA,MAAAE,EAAAD,EAAAE,MACAC,EAAAvK,OAAAwK,KAAAH,GAEA,IAAA,MAAAI,KAAAF,EACA,IAAA,MAAAhK,KAAA8J,EAAAI,GACAtI,KAAAgF,OAAAsD,EAAAlK,QASA,GAAA,MAAA6J,OAAA,CAAA,GAAA,iBAAAA,EA+BA,MAAA,IAAA5D,UAAA,0CA/BA,CACA,MAAAkE,EAAAN,EAAA/J,OAAAsK,UACA,GAAA,MAAAD,EAAA,CACA,GAAA,mBAAAA,EACA,MAAA,IAAAlE,UAAA,iCAKA,MAAAoE,EAAA,GACA,IAAA,MAAAC,KAAAT,EAAA,CACA,GAAA,iBAAAS,GAAA,mBAAAA,EAAAxK,OAAAsK,UACA,MAAA,IAAAnE,UAAA,qCAEAoE,EAAAxH,KAAA0H,MAAA9H,KAAA6H,IAGA,IAAA,MAAAA,KAAAD,EAAA,CACA,GAAA,IAAAC,EAAApI,OACA,MAAA,IAAA+D,UAAA,+CAEArE,KAAAgF,OAAA0D,EAAA,GAAAA,EAAA,UAIA,IAAA,MAAAhK,KAAAb,OAAAwK,KAAAJ,GAAA,CACA,MAAA7J,EAAA6J,EAAAvJ,GACAsB,KAAAgF,OAAAtG,EAAAN,MAcA2B,IAAArC,GAEAiK,aADAjK,KAAAA,KAEA,MAAAgB,EAAAmJ,KAAA7H,KAAA+H,GAAArK,GACA,YAAA0D,IAAA1C,EACA,KAGAsB,KAAA+H,GAAArJ,GAAAkK,KAAA,MAUA7I,QAAA8I,GACA,IAAAC,EAAA5I,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,QAAAkB,EAEAqH,EAAAM,WAAA/I,MACA7C,EAAA,EACA,KAAAA,EAAAsL,EAAAnI,QAAA,CACA,IAAA0I,EAAAP,EAAAtL,GACA,MAAAO,EAAAsL,EAAA,GACA5K,EAAA4K,EAAA,GAEAH,EAAAvL,KAAAwL,EAAA1K,EAAAV,EAAAsC,MACAyI,EAAAM,WAAA/I,MACA7C,KAWA4C,IAAArC,EAAAU,GAEAA,KAAAA,IACAuJ,aAFAjK,KAAAA,KAGAkK,cAAAxJ,GACA,MAAAM,EAAAmJ,KAAA7H,KAAA+H,GAAArK,GACAsC,KAAA+H,QAAA3G,IAAA1C,EAAAA,EAAAhB,GAAA,CAAAU,GAUA2B,OAAArC,EAAAU,GAEAA,KAAAA,IACAuJ,aAFAjK,KAAAA,KAGAkK,cAAAxJ,GACA,MAAAM,EAAAmJ,KAAA7H,KAAA+H,GAAArK,QACA0D,IAAA1C,EACAsB,KAAA+H,GAAArJ,GAAAuC,KAAA7C,GAEA4B,KAAA+H,GAAArK,GAAA,CAAAU,GAUA2B,IAAArC,GAGA,OADAiK,aADAjK,KAAAA,UAEA0D,IAAAyG,KAAA7H,KAAA+H,GAAArK,GASAqC,OAAArC,GAEAiK,aADAjK,KAAAA,KAEA,MAAAgB,EAAAmJ,KAAA7H,KAAA+H,GAAArK,QACA0D,IAAA1C,UACAsB,KAAA+H,GAAArJ,GASAqB,MACA,OAAAC,KAAA+H,GAQAhI,OACA,OAAAkJ,sBAAAjJ,KAAA,OAQAD,SACA,OAAAkJ,sBAAAjJ,KAAA,SAUAD,CAAA7B,OAAAsK,YACA,OAAAS,sBAAAjJ,KAAA,cAwBA,SAAA+I,WAAA3C,GACA,IAAA8C,EAAAhJ,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,GAAA,YAGA,OADArC,OAAAwK,KAAAjC,EAAA2B,IAAA1C,OACAyC,IAAA,QAAAoB,EAAA,SAAAC,GACA,OAAAA,EAAA9H,eACA,UAAA6H,EAAA,SAAAC,GACA,OAAA/C,EAAA2B,GAAAoB,GAAAP,KAAA,OACA,SAAAO,GACA,MAAA,CAAAA,EAAA9H,cAAA+E,EAAA2B,GAAAoB,GAAAP,KAAA,SA9BAZ,QAAA/I,UAAAmK,QAAApB,QAAA/I,UAAAf,OAAAsK,UAEA3K,OAAAC,eAAAkK,QAAA/I,UAAAf,OAAAC,YAAA,CACAC,MAAA,UACAyE,UAAA,EACA9E,YAAA,EACA+E,cAAA,IAGAjF,OAAA+E,iBAAAoF,QAAA/I,UAAA,CACAjB,IAAA,CAAAD,YAAA,GACAsL,QAAA,CAAAtL,YAAA,GACAqH,IAAA,CAAArH,YAAA,GACAiH,OAAA,CAAAjH,YAAA,GACAoH,IAAA,CAAApH,YAAA,GACAkH,OAAA,CAAAlH,YAAA,GACAsK,KAAA,CAAAtK,YAAA,GACAuL,OAAA,CAAAvL,YAAA,GACAqL,QAAA,CAAArL,YAAA,KAgBA,MAAAwL,EAAArL,OAAA,YAEA,SAAA+K,sBAAAO,EAAAN,GACA,MAAAV,EAAA3K,OAAAY,OAAAgL,GAMA,OALAjB,EAAAe,GAAA,CACAC,OAAAA,EACAN,KAAAA,EACAQ,MAAA,GAEAlB,EAGA,MAAAiB,EAAA5L,OAAA8L,eAAA,CACA5J,OAEA,IAAAC,MAAAnC,OAAA+L,eAAA5J,QAAAyJ,EACA,MAAA,IAAApF,UAAA,4CAGA,IAAAwF,EAAA7J,KAAAuJ,GACA,MAAAC,EAAAK,EAAAL,OACAN,EAAAW,EAAAX,KACAQ,EAAAG,EAAAH,MAEAJ,EAAAP,WAAAS,EAAAN,GAEA,OAAAQ,GADAJ,EAAAhJ,OAEA,CACAlC,WAAAgD,EACA0I,MAAA,IAIA9J,KAAAuJ,GAAAG,MAAAA,EAAA,EAEA,CACAtL,MAAAkL,EAAAI,GACAI,MAAA,MAGAjM,OAAA+L,eAAA/L,OAAA+L,eAAA,GAAA1L,OAAAsK,eAeA,SAAAuB,4BAAA3D,GACA,MAAArB,EAAAlH,OAAAwI,OAAA,CAAA2D,UAAA,MAAA5D,EAAA2B,IAIAkC,EAAApC,KAAAzB,EAAA2B,GAAA,QAKA,YAJA3G,IAAA6I,IACAlF,EAAAkF,GAAAlF,EAAAkF,GAAA,IAGAlF,EAvBAlH,OAAAC,eAAA2L,EAAAvL,OAAAC,YAAA,CACAC,MAAA,kBACAyE,UAAA,EACA9E,YAAA,EACA+E,cAAA,IAqDA,MAAAoH,EAAAhM,OAAA,sBAGAiM,EAAA3K,EAAA2K,aASA,MAAAC,SACArK,cACA,IAAAoD,EAAAjD,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,GAAA,KACAmK,EAAAnK,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,GAAA,GAEAgD,KAAA5F,KAAA0C,KAAAmD,EAAAkH,GAEA,MAAAC,EAAAD,EAAAC,QAAA,IAEAtK,KAAAkK,GAAA,CACAlG,IAAAqG,EAAArG,IACAsG,OAAAA,EACAC,WAAAF,EAAAE,YAAAJ,EAAAG,GACAlE,QAAA,IAAA4B,QAAAqC,EAAAjE,UAIApC,UACA,OAAAhE,KAAAkK,GAAAlG,IAGAsG,aACA,OAAAtK,KAAAkK,GAAAI,OAMAE,SACA,OAAAxK,KAAAkK,GAAAI,QAAA,KAAAtK,KAAAkK,GAAAI,OAAA,IAGAC,iBACA,OAAAvK,KAAAkK,GAAAK,WAGAnE,cACA,OAAApG,KAAAkK,GAAA9D,QAQArG,QACA,OAAA,IAAAqK,SAAA9E,MAAAtF,MAAA,CACAgE,IAAAhE,KAAAgE,IACAsG,OAAAtK,KAAAsK,OACAC,WAAAvK,KAAAuK,WACAnE,QAAApG,KAAAoG,QACAoE,GAAAxK,KAAAwK,MAKAtH,KAAAiE,MAAAiD,SAAAnL,WAEApB,OAAA+E,iBAAAwH,SAAAnL,UAAA,CACA+E,IAAA,CAAAjG,YAAA,GACAuM,OAAA,CAAAvM,YAAA,GACAyM,GAAA,CAAAzM,YAAA,GACAwM,WAAA,CAAAxM,YAAA,GACAqI,QAAA,CAAArI,YAAA,GACAuH,MAAA,CAAAvH,YAAA,KAGAF,OAAAC,eAAAsM,SAAAnL,UAAAf,OAAAC,YAAA,CACAC,MAAA,WACAyE,UAAA,EACA9E,YAAA,EACA+E,cAAA,IAGA,MAAA2H,EAAAvM,OAAA,qBAGAwM,EAAAjL,EAAA+G,MACAmE,EAAAlL,EAAAmL,OAEAC,EAAA,YAAAtL,EAAAuL,SAAA7L,UAQA,SAAA8L,UAAAC,GACA,MAAA,iBAAAA,GAAA,iBAAAA,EAAAP,GAeA,MAAAQ,QACAlL,YAAAiL,GACA,IAEAE,EAFAjD,EAAA/H,UAAAI,OAAA,QAAAc,IAAAlB,UAAA,GAAAA,UAAA,GAAA,GAKA6K,UAAAC,GAYAE,EAAAR,EAAAM,EAAAhH,MAPAkH,EAJAF,GAAAA,EAAAG,KAIAT,EAAAM,EAAAG,MAGAT,KAAAM,KAEAA,EAAA,IAKA,IAAAzC,EAAAN,EAAAM,QAAAyC,EAAAzC,QAAA,MAGA,GAFAA,EAAAA,EAAA6C,eAEA,MAAAnD,EAAA9E,MAAA4H,UAAAC,IAAA,OAAAA,EAAA7H,QAAA,QAAAoF,GAAA,SAAAA,GACA,MAAA,IAAAlE,UAAA,iDAGA,IAAAgH,EAAA,MAAApD,EAAA9E,KAAA8E,EAAA9E,KAAA4H,UAAAC,IAAA,OAAAA,EAAA7H,KAAAmC,MAAA0F,GAAA,KAEA9H,KAAA5F,KAAA0C,KAAAqL,EAAA,CACA7H,QAAAyE,EAAAzE,SAAAwH,EAAAxH,SAAA,EACAjC,KAAA0G,EAAA1G,MAAAyJ,EAAAzJ,MAAA,IAGA,MAAA6E,EAAA,IAAA4B,QAAAC,EAAA7B,SAAA4E,EAAA5E,SAAA,IAEA,GAAA,MAAA6B,EAAA9E,KAAA,CACA,MAAAmI,EA1pBA,SAAAC,mBAAAhG,GACA,MAAApC,EAAAoC,EAAApC,KAKA,OAAA,OAAAA,EAEA,KACA,iBAAAA,EAEA,2BACAM,kBAAAN,GAEA,kDACAA,aAAArD,KAEAqD,EAAAhC,MAAA,KACAT,OAAAgD,SAAAP,GAEA,KACA,yBAAAtF,OAAAoB,UAAA0E,SAAArG,KAAA6F,GAEA,KACAxC,YAAAC,OAAAuC,GAEA,KACA,mBAAAA,EAAAwC,4CAEAxC,EAAAwC,gBAIA,KAynBA4F,CAAAvL,MACA,OAAAsL,GAAAlF,EAAAjB,IAAA,iBACAiB,EAAApB,OAAA,eAAAsG,GAIA,IAAAE,EAAAT,UAAAC,GAAAA,EAAAQ,OAAA,KAGA,GAFA,WAAAvD,IAAAuD,EAAAvD,EAAAuD,QAEA,MAAAA,IA5DA,SAAAC,cAAAD,GACA,MAAApE,EAAAoE,GAAA,iBAAAA,GAAA3N,OAAA+L,eAAA4B,GACA,SAAApE,GAAA,gBAAAA,EAAA1E,YAAAhF,MA0DA+N,CAAAD,GACA,MAAA,IAAAnH,UAAA,mDAGArE,KAAAyK,GAAA,CACAlC,OAAAA,EACAmD,SAAAzD,EAAAyD,UAAAV,EAAAU,UAAA,SACAtF,QAAAA,EACA8E,UAAAA,EACAM,OAAAA,GAIAxL,KAAA2L,YAAAvK,IAAA6G,EAAA0D,OAAA1D,EAAA0D,YAAAvK,IAAA4J,EAAAW,OAAAX,EAAAW,OAAA,GACA3L,KAAA4L,cAAAxK,IAAA6G,EAAA2D,SAAA3D,EAAA2D,cAAAxK,IAAA4J,EAAAY,UAAAZ,EAAAY,SACA5L,KAAA6L,QAAA5D,EAAA4D,SAAAb,EAAAa,SAAA,EACA7L,KAAA8L,MAAA7D,EAAA6D,OAAAd,EAAAc,MAGAvD,aACA,OAAAvI,KAAAyK,GAAAlC,OAGAvE,UACA,OAAA2G,EAAA3K,KAAAyK,GAAAS,WAGA9E,cACA,OAAApG,KAAAyK,GAAArE,QAGAsF,eACA,OAAA1L,KAAAyK,GAAAiB,SAGAF,aACA,OAAAxL,KAAAyK,GAAAe,OAQAzL,QACA,OAAA,IAAAkL,QAAAjL,OAqGA,SAAA+L,WAAA3J,GACAE,MAAAhF,KAAA0C,KAAAoC,GAEApC,KAAAmB,KAAA,UACAnB,KAAAoC,QAAAA,EAGAE,MAAAG,kBAAAzC,KAAAA,KAAA0C,aAxGAQ,KAAAiE,MAAA8D,QAAAhM,WAEApB,OAAAC,eAAAmN,QAAAhM,UAAAf,OAAAC,YAAA,CACAC,MAAA,UACAyE,UAAA,EACA9E,YAAA,EACA+E,cAAA,IAGAjF,OAAA+E,iBAAAqI,QAAAhM,UAAA,CACAsJ,OAAA,CAAAxK,YAAA,GACAiG,IAAA,CAAAjG,YAAA,GACAqI,QAAA,CAAArI,YAAA,GACA2N,SAAA,CAAA3N,YAAA,GACAuH,MAAA,CAAAvH,YAAA,GACAyN,OAAA,CAAAzN,YAAA,KA4FAgO,WAAA9M,UAAApB,OAAAY,OAAA6D,MAAArD,WACA8M,WAAA9M,UAAAyD,YAAAqJ,WACAA,WAAA9M,UAAAvB,KAAA,aAGA,MAAAsO,EAAAzM,EAAA0D,YACAgJ,EAAAxM,EAAA6E,QASA,SAAA4H,MAAAlI,EAAAqG,GAGA,IAAA6B,MAAA/H,QACA,MAAA,IAAA7B,MAAA,0EAMA,OAHAY,KAAAiB,QAAA+H,MAAA/H,QAGA,IAAA+H,MAAA/H,QAAA,SAAAG,EAAAF,GAEA,MAAA+H,EAAA,IAAAlB,QAAAjH,EAAAqG,GACAlK,EA/GA,SAAAiM,sBAAAD,GACA,MAAAjB,EAAAiB,EAAA1B,GAAAS,UACA9E,EAAA,IAAA4B,QAAAmE,EAAA1B,GAAArE,SAQA,GALAA,EAAAjB,IAAA,WACAiB,EAAAhB,IAAA,SAAA,QAIA8F,EAAAmB,WAAAnB,EAAAoB,SACA,MAAA,IAAAjI,UAAA,oCAGA,IAAA,YAAA/C,KAAA4J,EAAAmB,UACA,MAAA,IAAAhI,UAAA,wCAGA,GAAA8H,EAAAX,QAAAW,EAAAhJ,gBAAA5D,EAAAuL,WAAAD,EACA,MAAA,IAAAvI,MAAA,mFAIA,IAAAiK,EAAA,KAIA,GAHA,MAAAJ,EAAAhJ,MAAA,gBAAA7B,KAAA6K,EAAA5D,UACAgE,EAAA,KAEA,MAAAJ,EAAAhJ,KAAA,CACA,MAAAqJ,EAAA3G,cAAAsG,GACA,iBAAAK,IACAD,EAAAvL,OAAAwL,IAwBA,OArBAD,GACAnG,EAAAhB,IAAA,iBAAAmH,GAIAnG,EAAAjB,IAAA,eACAiB,EAAAhB,IAAA,aAAA,0DAIA+G,EAAAP,WAAAxF,EAAAjB,IAAA,oBACAiB,EAAAhB,IAAA,kBAAA,gBAGAgB,EAAAjB,IAAA,eAAAgH,EAAAL,OACA1F,EAAAhB,IAAA,aAAA,SAMAvH,OAAAwI,OAAA,GAAA6E,EAAA,CACA3C,OAAA4D,EAAA5D,OACAnC,QAAA2D,4BAAA3D,GACA0F,MAAAK,EAAAL,QAsDAM,CAAAD,GAEAM,GAAA,WAAAtM,EAAAkM,SAAA3M,EAAAF,GAAA2M,QACAX,EAAAW,EAAAX,OAEA,IAAAkB,EAAA,KAEA,MAAAhI,EAAA,SAAAA,QACA,IAAAb,EAAA,IAAAkI,WAAA,+BACA3H,EAAAP,GACAsI,EAAAhJ,MAAAgJ,EAAAhJ,gBAAA5D,EAAAuL,UACAqB,EAAAhJ,KAAAwJ,QAAA9I,GAEA6I,GAAAA,EAAAvJ,MACAuJ,EAAAvJ,KAAAyJ,KAAA,QAAA/I,IAGA,GAAA2H,GAAAA,EAAAqB,QAEA,YADAnI,IAIA,MAAAoI,EAAA,SAAAA,mBACApI,IACAqI,YAIAC,EAAAP,EAAAtM,GACA,IAAA8M,EAMA,SAAAF,WACAC,EAAAtI,QACA8G,GAAAA,EAAA0B,oBAAA,QAAAJ,GACAhI,aAAAmI,GAPAzB,GACAA,EAAA2B,iBAAA,QAAAL,GASAX,EAAA3I,SACAwJ,EAAAI,KAAA,SAAA,SAAAC,GACAJ,EAAArI,WAAA,WACAR,EAAA,IAAAjC,kCAAAgK,EAAAnI,MAAA,oBACA+I,YACAZ,EAAA3I,WAIAwJ,EAAAlJ,GAAA,QAAA,SAAAC,GACAK,EAAA,IAAAjC,yBAAAgK,EAAAnI,uBAAAD,EAAA3B,UAAA,SAAA2B,IACAgJ,aAGAC,EAAAlJ,GAAA,WAAA,SAAA6C,GACA7B,aAAAmI,GAEA,MAAA7G,EA9aA,SAAAkH,qBAAAvI,GACA,MAAAqB,EAAA,IAAA4B,QACA,IAAA,MAAAtK,KAAAG,OAAAwK,KAAAtD,GACA,IAAA0C,EAAAnG,KAAA5D,GAGA,GAAAiL,MAAA4E,QAAAxI,EAAArH,IACA,IAAA,MAAA8P,KAAAzI,EAAArH,GACAgK,EAAApG,KAAAkM,UAGApM,IAAAgF,EAAA2B,GAAArK,GACA0I,EAAA2B,GAAArK,GAAA,CAAA8P,GAEApH,EAAA2B,GAAArK,GAAAuD,KAAAuM,SAGA9F,EAAApG,KAAAyD,EAAArH,MACA0I,EAAA2B,GAAArK,GAAA,CAAAqH,EAAArH,KAGA,OAAA0I,EAyZAkH,CAAA3G,EAAAP,SAGA,GAAA8F,MAAAuB,WAAA9G,EAAA+G,YAAA,CAEA,MAAAC,EAAAvH,EAAApI,IAAA,YAGA4P,EAAA,OAAAD,EAAA,KAAA1B,EAAAE,EAAAnI,IAAA2J,GAGA,OAAAxB,EAAAT,UACA,IAAA,QAGA,OAFAtH,EAAA,IAAAjC,6CAAAgK,EAAAnI,MAAA,qBACA+I,WAEA,IAAA,SAEA,GAAA,OAAAa,EAEA,IACAxH,EAAAhB,IAAA,WAAAwI,GACA,MAAA7J,GAEAK,EAAAL,GAGA,MACA,IAAA,SAEA,GAAA,OAAA6J,EACA,MAIA,GAAAzB,EAAAN,SAAAM,EAAAR,OAGA,OAFAvH,EAAA,IAAAjC,2CAAAgK,EAAAnI,MAAA,sBACA+I,WAMA,MAAAc,EAAA,CACAzH,QAAA,IAAA4B,QAAAmE,EAAA/F,SACAuF,OAAAQ,EAAAR,OACAE,QAAAM,EAAAN,QAAA,EACAC,MAAAK,EAAAL,MACAF,SAAAO,EAAAP,SACArD,OAAA4D,EAAA5D,OACApF,KAAAgJ,EAAAhJ,KACAqI,OAAAW,EAAAX,QAIA,OAAA,MAAA7E,EAAA+G,YAAAvB,EAAAhJ,MAAA,OAAA0C,cAAAsG,IACA/H,EAAA,IAAAjC,WAAA,2DAAA,8BACA4K,aAKA,MAAApG,EAAA+G,aAAA,MAAA/G,EAAA+G,YAAA,MAAA/G,EAAA+G,YAAA,SAAAvB,EAAA5D,UACAsF,EAAAtF,OAAA,MACAsF,EAAA1K,UAAA/B,EACAyM,EAAAzH,QAAAnB,OAAA,mBAIAX,EAAA4H,MAAA,IAAAjB,QAAA2C,EAAAC,UACAd,aAMApG,EAAAyG,KAAA,MAAA,WACA5B,GAAAA,EAAA0B,oBAAA,QAAAJ,KAEA,IAAA3J,EAAAwD,EAAAf,KAAA,IAAAoG,GAEA,MAAA8B,EAAA,CACA9J,IAAAmI,EAAAnI,IACAsG,OAAA3D,EAAA+G,WACAnD,WAAA5D,EAAAoH,cACA3H,QAAAA,EACA7E,KAAA4K,EAAA5K,KACAiC,QAAA2I,EAAA3I,SAIAwK,EAAA5H,EAAApI,IAAA,oBAUA,IAAAmO,EAAAP,UAAA,SAAAO,EAAA5D,QAAA,OAAAyF,GAAA,MAAArH,EAAA+G,YAAA,MAAA/G,EAAA+G,WAGA,OAFAhB,EAAA,IAAAtC,SAAAjH,EAAA2K,QACAxJ,EAAAoI,GASA,MAAAuB,EAAA,CACAC,MAAAvO,EAAAwO,aACAC,YAAAzO,EAAAwO,cAIA,GAAA,QAAAH,GAAA,UAAAA,EAIA,OAHA7K,EAAAA,EAAAyC,KAAAjG,EAAA0O,aAAAJ,IACAvB,EAAA,IAAAtC,SAAAjH,EAAA2K,QACAxJ,EAAAoI,GAKA,GAAA,WAAAsB,GAAA,aAAAA,EAkBAtB,EAAA,IAAAtC,SAAAjH,EAAA2K,GACAxJ,EAAAoI,OAnBA,CAGA/F,EAAAf,KAAA,IAAAoG,GACAoB,KAAA,OAAA,SAAAvI,GAGA1B,EADA,IAAA,GAAA0B,EAAA,IACA1B,EAAAyC,KAAAjG,EAAA2O,iBAEAnL,EAAAyC,KAAAjG,EAAA4O,oBAEA7B,EAAA,IAAAtC,SAAAjH,EAAA2K,GACAxJ,EAAAoI,QAl8BA,SAAA8B,cAAAC,EAAAlJ,GACA,MAAApC,EAAAoC,EAAApC,KAGA,OAAAA,EAEAsL,EAAAhN,MACA,iBAAA0B,GAEAsL,EAAAC,MAAAvL,GACAsL,EAAAhN,OACAgC,kBAAAN,IAEAsL,EAAAC,MAAAhO,OAAAG,KAAAG,OAAAmC,KACAsL,EAAAhN,OACA0B,aAAArD,MAEA2O,EAAAC,MAAAvL,EAAAvD,IACA6O,EAAAhN,OACAf,OAAAgD,SAAAP,IAEAsL,EAAAC,MAAAvL,GACAsL,EAAAhN,OACA,yBAAA5D,OAAAoB,UAAA0E,SAAArG,KAAA6F,IAEAsL,EAAAC,MAAAhO,OAAAG,KAAAsC,IACAsL,EAAAhN,OACAd,YAAAC,OAAAuC,IAEAsL,EAAAC,MAAAhO,OAAAG,KAAAsC,EAAA1C,OAAA0C,EAAArC,WAAAqC,EAAApC,aACA0N,EAAAhN,OAGA0B,EAAAyC,KAAA6I,GA26BAD,CAAAxB,EAAAb,KASAD,MAAAuB,WAAA,SAAAlL,GACA,OAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAIA2J,MAAA/H,QAAAqD,OAAArD,QAEAjH,EAAAD,QAAAA,EAAAiP,MACArO,OAAAC,eAAAb,EAAA,aAAA,CAAAmB,OAAA,IACAnB,EAAA0R,QAAA1R,EACAA,EAAA+K,QAAAA,QACA/K,EAAAgO,QAAAA,QACAhO,EAAAmN,SAAAA,SACAnN,EAAAkF,WAAAA,yCCplDApF,EAAAkB,EAAA2Q,GAAA,IAAAC,EAAA9R,EAAA,GAAA+R,EAAA/R,EAAA6B,EAAAiQ,GAOAE,QAAAC,IAAA,UANA,CACAtR,KAAA,MACAuR,OAAA,EACAC,SAAA,EACAC,OAAA,IAGAJ,QAAAC,IAAA,QAAAI,QAAAC,KAAApN,MAAA,IACA8M,QAAAC,IAAA,eACAF,GAAAA,CAAA,6BACA7I,KAAAU,GAAAA,EAAAM,QACAhB,KAAAyG,IACAqC,QAAAC,IAAA,aAAAtC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (typeof body === 'string') ; else if (isURLSearchParams(body)) ; else if (body instanceof Blob) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') ; else if (ArrayBuffer.isView(body)) ; else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string\n\t\tbody = String(body);\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\t// body is null\n\tif (this.body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is string\n\tif (typeof this.body === 'string') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is blob\n\tif (this.body instanceof Blob) {\n\t\treturn Body.Promise.resolve(this.body[BUFFER]);\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(this.body)) {\n\t\treturn Body.Promise.resolve(this.body);\n\t}\n\n\t// body is ArrayBuffer\n\tif (Object.prototype.toString.call(this.body) === '[object ArrayBuffer]') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is ArrayBufferView\n\tif (ArrayBuffer.isView(this.body)) {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body.buffer, this.body.byteOffset, this.body.byteLength));\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(this.body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\t_this4.body.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\t_this4.body.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\t_this4.body.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\nfunction extractContentType(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: Currently, because of a guard in Request, body\n\t// can never be null. Included here for completeness.\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: included for completion\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn Buffer.byteLength(body);\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\treturn Buffer.byteLength(String(body));\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn body.byteLength;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn body.byteLength;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\tdest.write(Buffer.from(String(body)));\n\t\tdest.end();\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\tdest.write(body[BUFFER]);\n\t\tdest.end();\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tdest.write(Buffer.from(body));\n\t\tdest.end();\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tdest.write(Buffer.from(body.buffer, body.byteOffset, body.byteLength));\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name)) {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders: new Headers(opts.headers)\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url;\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (init.body != null) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType !== null && !headers.has('Content-Type')) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tif (!headers.has('Connection') && !request.agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent: request.agent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","import fetch from \"node-fetch\";\r\nconst theBoi = {\r\n    name: \"Red\",\r\n    gnelf: false,\r\n    gnoblin: false,\r\n    gnome: true\r\n};\r\nconsole.log(\"Hello: \", theBoi);\r\nconsole.log(\"Args:\", process.argv.slice(2));\r\nconsole.log(\"Fetching...\");\r\nfetch(\"https://meme-slash.now.sh\")\r\n    .then(res => res.json())\r\n    .then(response => {\r\n    console.log(\"Response: \", response);\r\n});\r\n"]}